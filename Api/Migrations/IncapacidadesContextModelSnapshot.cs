// <auto-generated />
using System;
using Datos;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Api.Migrations
{
    [DbContext(typeof(IncapacidadesContext))]
    partial class IncapacidadesContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5");

            modelBuilder.Entity("Modelos.Entidades.Incapacidad", b =>
                {
                    b.Property<int>("IncapacidadId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CantidadDias")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("FechaFinal")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime>("FechaIncial")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("IdEmpleado")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Observaciones")
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200);

                    b.Property<byte>("TipoIncapacidad")
                        .HasColumnType("INTEGER");

                    b.HasKey("IncapacidadId");

                    b.ToTable("Incapacidades");
                });

            modelBuilder.Entity("Modelos.Entidades.ReconocimientoEconomico", b =>
                {
                    b.Property<int>("ReconocimientoEconomicoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("FechaFinal")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime>("FechaInicial")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("IdEmpleado")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IncapacidadId")
                        .HasColumnType("INTEGER");

                    b.Property<byte>("ResponsablePago")
                        .HasColumnType("INTEGER");

                    b.HasKey("ReconocimientoEconomicoId");

                    b.HasIndex("IncapacidadId");

                    b.ToTable("ReconocimientosEconomicos");
                });

            modelBuilder.Entity("Modelos.Entidades.ReconocimientoEconomico", b =>
                {
                    b.HasOne("Modelos.Entidades.Incapacidad", "Incapacidad")
                        .WithMany("ReconocimientosEconomicos")
                        .HasForeignKey("IncapacidadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("Modelos.ValueObjects.Dinero", "ValorAPagar", b1 =>
                        {
                            b1.Property<int>("ReconocimientoEconomicoId")
                                .HasColumnType("INTEGER");

                            b1.Property<decimal>("Cantidad")
                                .HasColumnName("DineroCantidad")
                                .HasColumnType("decimal(5, 2)");

                            b1.Property<string>("Moneda")
                                .IsRequired()
                                .HasColumnName("DineroMoneda")
                                .HasColumnType("varchar(3)")
                                .HasMaxLength(3);

                            b1.HasKey("ReconocimientoEconomicoId");

                            b1.ToTable("ReconocimientosEconomicos");

                            b1.WithOwner()
                                .HasForeignKey("ReconocimientoEconomicoId");
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
